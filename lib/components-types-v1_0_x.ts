/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export interface ComponentsDefinitionV10X {
  /**
   * Name of the components package
   */
  name: string;
  /**
   * Description of components package
   */
  description?: string;
  /**
   * Version of matching components model
   */
  version: string;
  /**
   * Default component inserted on pressing enter in a text field
   */
  defaultComponentOnEnter: string;
  /**
   * List of available components
   */
  components: {
    /**
     * Unique component identifier
     */
    name: string;
    /**
     * Component label shown in Digital Editor
     */
    label: string;
    /**
     * Icon shown for component in Digital Editor
     */
    icon: string;
    /**
     * names of properties this component can use
     */
    properties?: string[];
    /**
     * How this component is selectable, by default the user can select inside the component to select it
     */
    selectionMethod?: "default" | "handle";
    /**
     * Allows nesting the component in containers, defaults to "yes"
     */
    allowNesting?: "no" | "yes" | "one-level";
    /**
     * Restricts children of this component to the listed ones and can be further filtered down to also have content
     */
    restrictChildren?: {
      [k: string]: {
        withContent?: string;
      };
    };
    /**
     * Count characters, words and paragraphs of this component
     */
    countStatistics?: boolean;
  }[];
  /**
   * List of available component properties
   */
  componentProperties: {
    /**
     * Unique identifier of component property
     */
    name: string;
    /**
     * Display label of Component property
     */
    label: string;
    /**
     * Type of UI element and options.
     */
    control:
      | {
          /**
           * Dropdown with fixed number of options
           */
          type: "select";
          options: {
            caption: string;
            value?: string;
          }[];
        }
      | {
          /**
           * Checkbox toggling between value and no value
           */
          type: "checkbox";
          value: string;
        }
      | {
          /**
           * Text field property
           */
          type: "text";
          pattern?: string;
          defaultValue?: string;
          unit?: string;
          inputPlaceholder?: string;
        }
      | {
          /**
           * Time field property
           */
          type: "time";
          [k: string]: any;
        }
      | {
          /**
           * Color picker field property
           */
          type: "colorPicker";
          options?: {
            opacity?: boolean;
          };
        };
    dataType:
      | "styles"
      | "inlineStyles"
      | "data"
      | "doc-editable"
      | "doc-image"
      | "doc-html"
      | "doc-slideshow"
      | "doc-media";
    dataProperty?: string;
    group?: string;
    selector?: string;
  }[];
  /**
   * List of groups shown in component chooser dialog
   */
  groups: {
    /**
     * Unique group identifier
     */
    name: string;
    /**
     * Group label shown in Digital Editor
     */
    label: string;
    /**
     * names of components in this group
     */
    components: string[];
    [k: string]: any;
  }[];
  /**
   * Conversion rules for transforming one component into another component
   */
  conversionRules: {
    [k: string]: {
      [k: string]:
        | "auto"
        | {
            type: "simple";
            map: {
              [k: string]: string;
            };
            [k: string]: any;
          }
        | {
            type: "from-container";
            container: string;
            [k: string]: any;
          }
        | {
            type: "to-container";
            container: string;
            [k: string]: any;
          };
    };
  };
}
